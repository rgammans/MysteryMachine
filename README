Installation
============

If you are installing from a built source distribution then the command:-

     python setup.py install -d <DirectoryToInstallInto>

should work.

This will create a python virtualenv in the specified installation directory and
install MysteryMachine, a customised yapsy plus all of the dependencies into to
it.

If you are installing from the mercurial repo you need the following libraries
on your PYTHONPATH. Once the libraries below and MysteryMachine itself are on your
python path the scripts in the `scripts' directory should work. Or you can install
a patched version of yapsy (patch is in the patches directory) and paver then use:- 

    paver sdist

to build you own source distribution and install from that.


Libraries Required
------------------

You will need to install the following Python packages to use the 
MysteryMachine .

Yapsy > 1.7 : A Patch for versions lower than this can be found patches
pyparsing > 1.5.0

Yapsy 
'''''
Yapsy does not currently meet our python3 requirements, and tin fact the use of 
exec, rather than execfile creates a small security race hazard. Wether
our application's useis sensitive enough to worry about this is a moot point
though. 

Having said that since for python3 we need to fix yapsy - changing it to be
secure as well strikes me as a good idea.

Pyparsing
'''''''''

Actually you may be able to make MysteryMachine work with Pyparsing 1.4, and the
parser was orginally written for it.
However the whitespace handling code is different between the two releases and 1.4
may damage rst documents when used with the settings required for 1.5.

Also Pyparsing 1.4 did not throw and exception if it couldn't parse the whole string
it would just silently discard the remaining output. SO don't blame me if you
attempt to use it with and early version and find your mssing half your character sheet.

Mercurial
'''''''''
MysteryMachine needs to be able to use Mercurial as a library , on a POSIX
OS (Linux & MacOs) just installing mercurial should be enough , but on windows
you will need to ensure it is install as a python library. You can do this
using easy_install. If you not famaliar with easy install try one of the
downloadable archives, or read up on it on the web. It should be straightforward.

Bpython
'''''''
The same goes for Bpython as mercurial. Use easy_install or your OS package manager
to install it.

Docutils
''''''''
MysteryMachine was first developed with docutils 0.4 but I'm currently using 0.6 myself
as it generates less noise of on the python comaptiblity tests. I suspect 0.5 and 0.6 should
work equally. 0.4 will probably work too but I haven't tested it in a while.

Running MysteryMachine
----------------------

Mystery machine has a two Cli ui's at the moment which dumps you at the
python shell with the global 'ctx' bound to MysteryMachine Library.

The are basically identical, the primary one is base on bpython and can
be started like this:

    mysterymachine --ui=Ui.cli.BPython

Bpython support auto completion and help pop-up documentation. The
down side of Bpython is that it requires a Unix (or unix-like) terminal
to run in, so is not compatible with windows.

For windows , althought it shoulkd work anywhere that has python there is
an alternative Ui based on the Idle development environment, this
Ui can be started like this:-

    mysterymachine --ui=Ui.cli.Idle

Similiarily this supports auto-completion and pop-up documentation but
where as Bpython will show the complete docstring, Idle tries to 
shorten it. 
